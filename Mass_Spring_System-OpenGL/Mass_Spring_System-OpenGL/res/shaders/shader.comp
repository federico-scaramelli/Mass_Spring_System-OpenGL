#version 460

layout ( local_size_x = 10, local_size_y = 10, local_size_z = 1 ) in;

struct Vertex {
    vec4 pos;
	vec4 vel;
	vec4 color;
	vec4 normal;
	vec4 oldPos;
	vec4 pinned;
};

layout ( std430, binding = 0 ) buffer VertexBufferIn {
	Vertex verticesIn[];
};
layout ( std430, binding = 1 ) buffer VertexBufferOut {
	Vertex verticesOut[];
};

uniform float deltaTime;
uniform vec4 gravityAcceleration;

void main() 
{
	uvec3 numParticles = gl_NumWorkGroups * gl_WorkGroupSize;
	uvec3 id = gl_GlobalInvocationID; 
	uint index =  id.x + (id.y * numParticles.x);
	
	if (index > numParticles.x * numParticles.y) 
		return;

	
	if (verticesIn[index].pinned.x >= 0.5) {
		verticesOut[index].pos = verticesIn[index].pos;
		verticesOut[index].vel = vec4(0.0);
		return;
	}
	
	verticesOut[index].pos.x += gravityAcceleration.y * 2 * deltaTime;
	verticesOut[index].pos.y += gravityAcceleration.y * deltaTime;
}